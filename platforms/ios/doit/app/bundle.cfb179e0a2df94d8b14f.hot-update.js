webpackHotUpdate("bundle",{

/***/ "./core/document-ios.js":
/***/ (function(module, exports, __webpack_require__) {

const TodoTXT = __webpack_require__("./core/todotxt.js");

const Document = UIDocument.extend({
  initWithFileURL(url) {
    this.todotxt = new TodoTXT();
    return super.initWithFileURL(url);
  },

  contentsForTypeError(type) {
    console.log('contentsForType SAVINGGGG??', type);
    const text = this.todotxt.serialize(this.tasks);
    console.log(text);

    try {
      console.log(text.dataUsingEncoding(NSUTF8StringEncoding));
      return text.dataUsingEncoding(NSUTF8StringEncoding);
    } catch (error) {
      console.log(error);
      return text;
    }
  },

  loadFromContentsOfTypeError(contents, typeName) {
    const stringContent = NSString.alloc().initWithDataEncoding(contents, NSUTF8StringEncoding).toString();
    const tasks = this.todotxt.parse(stringContent);
    this.tasks = tasks;
    return true;
  }

}, {
  name: 'Document'
});
const todotxtBookmarkDataKey = 'todotxtBookmarkData';

function storeBookmark(url) {
  console.log('storeBookmark');
  const data = url.bookmarkDataWithOptionsIncludingResourceValuesForKeysRelativeToURLError(NSURLBookmarkCreationOptions.NSURLBookmarkCreationWithSecurityScope, [], null);
  NSUserDefaults.standardUserDefaults.setObjectForKey(data, todotxtBookmarkDataKey);
}

function loadBookmark() {
  const data = NSUserDefaults.standardUserDefaults.dataForKey(todotxtBookmarkDataKey);

  if (!data) {
    return null;
  }

  const isStale = new interop.Reference(interop.types.bool);
  const url = NSURL.URLByResolvingBookmarkDataOptionsRelativeToURLBookmarkDataIsStaleError(data, NSURLBookmarkCreationOptions.NSURLBookmarkCreationWithSecurityScope, null, isStale);
  console.log('[INFO] isStale', isStale.value);

  if (isStale.value) {
    console.log('[WARNING] isStale == true, I will re-store and re-load bookmark', isStale.value);
    storeBookmark(url);
    return loadBookmark();
  }

  return url;
}

function loadDocument(documentLoaded) {
  const url = loadBookmark();
  loadDocumentWithURL(url, documentLoaded);
}

function loadDocumentWithURL(url, documentLoaded) {
  if (!url) {
    return documentLoaded(null);
  }

  const document = Document.alloc().initWithFileURL(url);
  document.openWithCompletionHandler(success => {
    if (!success) {
      documentLoaded(null);
    }

    storeBookmark(url);
    documentLoaded(document);
  });
}

module.exports = {
  loadDocumentWithURL,
  loadDocument
};

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb3JlL2RvY3VtZW50LWlvcy5qcyJdLCJuYW1lcyI6WyJUb2RvVFhUIiwicmVxdWlyZSIsIkRvY3VtZW50IiwiVUlEb2N1bWVudCIsImV4dGVuZCIsImluaXRXaXRoRmlsZVVSTCIsInVybCIsInRvZG90eHQiLCJjb250ZW50c0ZvclR5cGVFcnJvciIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwidGV4dCIsInNlcmlhbGl6ZSIsInRhc2tzIiwiZGF0YVVzaW5nRW5jb2RpbmciLCJOU1VURjhTdHJpbmdFbmNvZGluZyIsImVycm9yIiwibG9hZEZyb21Db250ZW50c09mVHlwZUVycm9yIiwiY29udGVudHMiLCJ0eXBlTmFtZSIsInN0cmluZ0NvbnRlbnQiLCJOU1N0cmluZyIsImFsbG9jIiwiaW5pdFdpdGhEYXRhRW5jb2RpbmciLCJ0b1N0cmluZyIsInBhcnNlIiwibmFtZSIsInRvZG90eHRCb29rbWFya0RhdGFLZXkiLCJzdG9yZUJvb2ttYXJrIiwiZGF0YSIsImJvb2ttYXJrRGF0YVdpdGhPcHRpb25zSW5jbHVkaW5nUmVzb3VyY2VWYWx1ZXNGb3JLZXlzUmVsYXRpdmVUb1VSTEVycm9yIiwiTlNVUkxCb29rbWFya0NyZWF0aW9uT3B0aW9ucyIsIk5TVVJMQm9va21hcmtDcmVhdGlvbldpdGhTZWN1cml0eVNjb3BlIiwiTlNVc2VyRGVmYXVsdHMiLCJzdGFuZGFyZFVzZXJEZWZhdWx0cyIsInNldE9iamVjdEZvcktleSIsImxvYWRCb29rbWFyayIsImRhdGFGb3JLZXkiLCJpc1N0YWxlIiwiaW50ZXJvcCIsIlJlZmVyZW5jZSIsInR5cGVzIiwiYm9vbCIsIk5TVVJMIiwiVVJMQnlSZXNvbHZpbmdCb29rbWFya0RhdGFPcHRpb25zUmVsYXRpdmVUb1VSTEJvb2ttYXJrRGF0YUlzU3RhbGVFcnJvciIsInZhbHVlIiwibG9hZERvY3VtZW50IiwiZG9jdW1lbnRMb2FkZWQiLCJsb2FkRG9jdW1lbnRXaXRoVVJMIiwiZG9jdW1lbnQiLCJv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L0IsR0FBUDtBQUNEOztBQUVELFNBQVN5QyxZQUFULENBQXVCQyxjQUF2QixFQUF1QztBQUNyQyxRQUFNMUMsR0FBRyxHQUFHK0IsWUFBWSxFQUF4QjtBQUNBWSxxQkFBbUIsQ0FBQzNDLEdBQUQsRUFBTTBDLGNBQU4sQ0FBbkI7QUFDRDs7QUFFRCxTQUFTQyxtQkFBVCxDQUE4QjNDLEdBQTlCLEVBQW1DMEMsY0FBbkMsRUFBbUQ7QUFDakQsTUFBSSxDQUFDMUMsR0FBTCxFQUFVO0FBQ1IsV0FBTzBDLGNBQWMsQ0FBQyxJQUFELENBQXJCO0FBQ0Q7O0FBQ0QsUUFBTUUsUUFBUSxHQUFHaEQsUUFBUSxDQUFDcUIsS0FBVCxHQUFpQmxCLGVBQWpCLENBQWlDQyxHQUFqQyxDQUFqQjtBQUNBNEMsVUFBUSxDQUFDQyx5QkFBVCxDQUFtQ0MsT0FBTyxJQUFJO0FBQzVDLFFBQUksQ0FBQ0EsT0FBTCxFQUFjO0FBQ1pKLG9CQUFjLENBQUMsSUFBRCxDQUFkO0FBQ0Q7O0FBQ0RuQixpQkFBYSxDQUFDdkIsR0FBRCxDQUFiO0FBQ0EwQyxrQkFBYyxDQUFDRSxRQUFELENBQWQ7QUFDRCxHQU5EO0FBT0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFTCxxQkFBRjtBQUF1QkY7QUFBdkIsQ0FBakIsQyIsImZpbGUiOiJidW5kbGUuY2ZiMTc5ZTBhMmRmOTRkOGIxNGYuaG90LXVwZGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFRvZG9UWFQgPSByZXF1aXJlKCcuL3RvZG90eHQnKVxuXG5jb25zdCBEb2N1bWVudCA9IFVJRG9jdW1lbnQuZXh0ZW5kKHtcbiAgaW5pdFdpdGhGaWxlVVJMICh1cmwpIHtcbiAgICB0aGlzLnRvZG90eHQgPSBuZXcgVG9kb1RYVCgpXG4gICAgcmV0dXJuIHN1cGVyLmluaXRXaXRoRmlsZVVSTCh1cmwpXG4gIH0sXG4gIGNvbnRlbnRzRm9yVHlwZUVycm9yICh0eXBlKSB7XG4gICAgY29uc29sZS5sb2coJ2NvbnRlbnRzRm9yVHlwZSBTQVZJTkdHR0c/PycsIHR5cGUpXG4gICAgY29uc3QgdGV4dCA9IHRoaXMudG9kb3R4dC5zZXJpYWxpemUodGhpcy50YXNrcylcbiAgICBjb25zb2xlLmxvZyh0ZXh0KVxuICAgICAgICAgIHRyeSB7XG4gICAgY29uc29sZS5sb2codGV4dC5kYXRhVXNpbmdFbmNvZGluZyhOU1VURjhTdHJpbmdFbmNvZGluZykpXG4gICAgcmV0dXJuIHRleHQuZGF0YVVzaW5nRW5jb2RpbmcoTlNVVEY4U3RyaW5nRW5jb2RpbmcpXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgICAgICAgcmV0dXJuIHRleHRcbiAgICAgICAgICB9XG4gIH0sXG4gIGxvYWRGcm9tQ29udGVudHNPZlR5cGVFcnJvciAoY29udGVudHMsIHR5cGVOYW1lKSB7XG4gICAgY29uc3Qgc3RyaW5nQ29udGVudCA9IE5TU3RyaW5nLmFsbG9jKCkuaW5pdFdpdGhEYXRhRW5jb2RpbmcoY29udGVudHMsIE5TVVRGOFN0cmluZ0VuY29kaW5nKS50b1N0cmluZygpXG4gICAgY29uc3QgdGFza3MgPSB0aGlzLnRvZG90eHQucGFyc2Uoc3RyaW5nQ29udGVudClcbiAgICB0aGlzLnRhc2tzID0gdGFza3NcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG59LCB7XG4gIG5hbWU6ICdEb2N1bWVudCdcbn0pXG5cbmNvbnN0IHRvZG90eHRCb29rbWFya0RhdGFLZXkgPSAndG9kb3R4dEJvb2ttYXJrRGF0YSdcbmZ1bmN0aW9uIHN0b3JlQm9va21hcmsgKHVybCkge1xuICBjb25zb2xlLmxvZygnc3RvcmVCb29rbWFyaycpXG4gIGNvbnN0IGRhdGEgPSB1cmwuYm9va21hcmtEYXRhV2l0aE9wdGlvbnNJbmNsdWRpbmdSZXNvdXJjZVZhbHVlc0ZvcktleXNSZWxhdGl2ZVRvVVJMRXJyb3IoXG4gICAgTlNVUkxCb29rbWFya0NyZWF0aW9uT3B0aW9ucy5OU1VSTEJvb2ttYXJrQ3JlYXRpb25XaXRoU2VjdXJpdHlTY29wZSwgW10sIG51bGwpXG4gIE5TVXNlckRlZmF1bHRzLnN0YW5kYXJkVXNlckRlZmF1bHRzLnNldE9iamVjdEZvcktleShkYXRhLCB0b2RvdHh0Qm9va21hcmtEYXRhS2V5KVxufVxuXG5mdW5jdGlvbiBsb2FkQm9va21hcmsgKCkge1xuICBjb25zdCBkYXRhID0gTlNVc2VyRGVmYXVsdHMuc3RhbmRhcmRVc2VyRGVmYXVsdHMuZGF0YUZvcktleSh0b2RvdHh0Qm9va21hcmtEYXRhS2V5KVxuICBpZiAoIWRhdGEpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIGNvbnN0IGlzU3RhbGUgPSBuZXcgaW50ZXJvcC5SZWZlcmVuY2UoaW50ZXJvcC50eXBlcy5ib29sKVxuICBjb25zdCB1cmwgPSBOU1VSTC5VUkxCeVJlc29sdmluZ0Jvb2ttYXJrRGF0YU9wdGlvbnNSZWxhdGl2ZVRvVVJMQm9va21hcmtEYXRhSXNTdGFsZUVycm9yKFxuICAgIGRhdGEsXG4gICAgTlNVUkxCb29rbWFya0NyZWF0aW9uT3B0aW9ucy5OU1VSTEJvb2ttYXJrQ3JlYXRpb25XaXRoU2VjdXJpdHlTY29wZSxcbiAgICBudWxsLCBpc1N0YWxlKVxuICBjb25zb2xlLmxvZygnW0lORk9dIGlzU3RhbGUnLCBpc1N0YWxlLnZhbHVlKVxuICBpZiAoaXNTdGFsZS52YWx1ZSkge1xuICAgIGNvbnNvbGUubG9nKCdbV0FSTklOR10gaXNTdGFsZSA9PSB0cnVlLCBJIHdpbGwgcmUtc3RvcmUgYW5kIHJlLWxvYWQgYm9va21hcmsnLCBpc1N0YWxlLnZhbHVlKVxuICAgIHN0b3JlQm9va21hcmsodXJsKVxuICAgIHJldHVybiBsb2FkQm9va21hcmsoKVxuICB9XG4gIHJldHVybiB1cmxcbn1cblxuZnVuY3Rpb24gbG9hZERvY3VtZW50IChkb2N1bWVudExvYWRlZCkge1xuICBjb25zdCB1cmwgPSBsb2FkQm9va21hcmsoKVxuICBsb2FkRG9jdW1lbnRXaXRoVVJMKHVybCwgZG9jdW1lbnRMb2FkZWQpXG59XG5cbmZ1bmN0aW9uIGxvYWREb2N1bWVudFdpdGhVUkwgKHVybCwgZG9jdW1lbnRMb2FkZWQpIHtcbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gZG9jdW1lbnRMb2FkZWQobnVsbClcbiAgfVxuICBjb25zdCBkb2N1bWVudCA9IERvY3VtZW50LmFsbG9jKCkuaW5pdFdpdGhGaWxlVVJMKHVybClcbiAgZG9jdW1lbnQub3BlbldpdGhDb21wbGV0aW9uSGFuZGxlcihzdWNjZXNzID0+IHtcbiAgICBpZiAoIXN1Y2Nlc3MpIHtcbiAgICAgIGRvY3VtZW50TG9hZGVkKG51bGwpXG4gICAgfVxuICAgIHN0b3JlQm9va21hcmsodXJsKVxuICAgIGRvY3VtZW50TG9hZGVkKGRvY3VtZW50KVxuICB9KVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgbG9hZERvY3VtZW50V2l0aFVSTCwgbG9hZERvY3VtZW50IH1cbiJdLCJzb3VyY2VSb290IjoiIn0=